apply plugin: 'java'

configurations {
    provided
}

// Generate class to hold API properties
def generatedDir = file("$buildDir/generated/source/br/com/mxel/cuedot")
task generateBuildConfigJava {

    def javaClass =
            'package br.com.mxel.cuedot;\n' +
                    'public class BuildConfig {\n' +
                    '\tpublic static String THE_MOVIE_DB_API_KEY = ' + rootProject.ext.apiKey + ';\n' +
                    '\tpublic static String THE_MOVIE_DB_API_URL = ' + rootProject.ext.apiUrl + ';\n' +
                    '\tpublic static String THE_MOVIE_DB_API_VERSION = ' + rootProject.ext.apiVersion + ';\n' +
                    '}'

    generatedDir.exists() || generatedDir.mkdirs()

    new File(generatedDir, "BuildConfig.java").write(javaClass)
}

compileJava.dependsOn generateBuildConfigJava

sourceSets {
    main {
        compileClasspath += configurations.provided
        java {
            srcDirs += generatedDir
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: 'build')
    compile project(':cuedot-core')

    // Dependency injection
    compile rootProject.ext.libraries.dagger
    provided rootProject.ext.libraries.daggerCompiler

    // RXJava
    compile rootProject.ext.libraries.rxjava
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

